文本陈述:
首先我们明确程序对应的地址是虚拟地址，进入CPU的是线性地址，最终CPU的物理落盘的地址是物理地址。

虚拟地址从何而来？

//实际上这就是分段机制的过程！
如何得到虚拟地址？==>虚拟地址=段基地址+段偏移
                              |       |
 -----------------------------         ----------------
|                                                      |
V                                                      V
如何得到段基地址？==>段描述符里面有                       如何得到段偏移？==>即如何得到有效地址，这是CPU的基本的寻址方式
|                                                      |
V                                                      V
如何得到段描述符？==>段描述符表(段描述符数组)+指定索引      立即数寻址、寄存器寻址、寄存器基址变址寻址
|
V
如何得到段描述符表？==>段选择子里面的第3位
如何得到段描述符表的指定索引？==>段选择子里面的高13位
|
V
如何得到段选择子?==>段寄存器(DS\FS\GS等)里面有
|
V
到这里就是最基本的CPU的存储功能了！



段选择子里面有偏移和指定表

虚拟地址(线性)结构组成：
# +---------------------------------- 32位虚拟地址 ----------------------------------+
# |  页目录索引(10位)   |   页表索引(10位)    |         页内偏移(12位)                 |
# +---------------------------------- 32位虚拟地址 ----------------------------------+

段描述符组成：
# 段描述符的结构
# Byte 7       Byte 6       Byte 5       Byte 4       Byte 3       Byte 2       Byte 1       Byte 0
# +------------+------------+------------+------------+------------+------------+------------+------------+
# |G D/B 0 AVL | Limit 19-16 | P DPL S TYPE | Limit 15-0 |
# |            |             |              |            |
# +------------+------------+------------+------------+------------+------------+------------+------------+
# |          Segment Base 31-24           |       Segment Base 23-16       |
# +--------------------------------------+--------------------------------+
# |                 Segment Base 15-0                        |
# +----------------------------------------------------------+


段选择子组成：
#高13位           1位    2位
#+---------------+-----+-----+
#| 描述符索引     | TI  | RPL |
#+---------------+-----+-----+

===========================================================================================================
线性地址构成:

传统模式==>段基地址<<4+段偏移
平坦模式==>段基地址=0，段偏移置最大



===========================================================================================================
物理地址构成:32位=高20位+低12位线性(虚拟)地址偏移

高20位如何来?==>页框基地址==>页表项的高20位

页表项如何来?==>页表基地址+页表偏移

页表基地址如何来?==>即页目录索引==>由虚拟地址（线性地址）的高10位

页表偏移如何来?==>即页表索引==>由线性地址的中间10位就是页表索引

页目录索引读取哪里?==>即页目录表基地址 = CR3寄存器中的值

===========================================================================================================

页表项构成

# 这里的页表项(页表目录项也一样的)结构：
# +------------------------------+---------------------+--------------+-----------------+--------------+---------------+------------+
# | 页框基地址(12-32，共20位)     | 辅助位(7-11，共5位)  | D(6，共1位)   | 保留(3-5，共3位) | U/S(2，共1位) | R/W(1，共1位) | P(0，共1位) |
# +------------------------------+---------------------+--------------+-----------------+--------------+---------------+------------+
